pipeline{
    parameters{
        choice{name: 'terraformAction', choices: [ 'apply', 'destroy'], description: "choose your terraform actions"}
    }

    environment{
        AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
    }

    agent any

    stages{
        stage('git checkout'){
            steps{
                script{
                    dir("main"){
                        git branch: 'main', url: 'https://github.com/Harshith-0710/March-2025.git'
                    }
                }
            }
        }

        stage('plan'){
            steps{
                sh "pwd;cd project-2; terraform init"
                sh "pwd;cd project-2; terraform plan -out tf plan"
                sh "pwd;cd project-2; terraform show -no-colot tfplan > tfplan.txt"
            }
        }

        stage('Approval'){
            steps{
                script{
                    def plan = readfile 'project-2/tfplan.txt'
                    input message: "Do you want to proceed with the terraform actions..?"
                    parameters: [text(name: 'plan', description: 'please review the plan', defaultValue: plan)]
                }
            }
        }

        stage('apply or destroy'){
            when{
                expression{
                    return params.terraformAction == 'apply' || params.terraformAction == 'destroy'
                }
            }

            steps{
                script{
                    if (params.terraformAction == 'apply'){
                        sh "pwd;cd project-2/; terraform apply -input=false tfplan "
                    } else if (params.terraformAction == 'destroy'){
                        sh "pwd;cd project-2/; terraform destroy -auto-approve "
                    }

                }
            }
        
        }
    }
}