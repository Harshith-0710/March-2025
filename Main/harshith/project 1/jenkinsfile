# continious integration of java project

pipeline{
    agent any
    
    tools{                             # always specify the tools that are going to be used 
        jdk 'java-11'
        maven 'maven'
    }

    stages{
        stage('git checkout'){
            steps{
                git branch: 'main' , url:'https://github.com/ManojKRISHNAPPA/test-1.git'
            }
        }
    
        stage('Compile'){             # compiles maven
            steps{
                sh "mvn compile"
            }
        }

        stage('Build'){              # gets all the files required and installes maven 
            steps{
                sh "mvn clean install"
            }
        }

        stage('Codescan'){        # add the sonarqube credentials and the way to access it
            steps{
                 withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh "mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}"
                 }
            }
        }

        stage('Build and tag'){
            steps{
                sh "docker build -t manojkrishnappa/project:1"
            }
        }

        stage('Docker image scan'){
            steps{
                sh "trivy image --format table -o trivy-image-report.html manojkrishnappa/project:1"
            }
        }

        stage('Containerisation'){        # this stage is used only for exposing the image in docker hub
            steps{
                sh```
                   docker stop c1
                   docker rm c1
                   docker run -it -d --name c1 -p 9001:8000 manojkrishnappa/project:1
                ```   
            }
        }

        stage('login to dockerhub'){           # add the login credentials and the way to access 
            steps{
                script{
                     withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh "echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin"
                     }   
                }             
            }
        }

        stage('Pushing image to repository'){           # pushes the image/application to the repo 
            steps{
                sh 'docker push manojkrishnappa/project:1'
            }
        }
    }
}